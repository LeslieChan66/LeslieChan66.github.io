{"meta":{"title":"Leslie's Blog","subtitle":"","description":"","author":"Leslie Chan","url":"http://lesliechan66.github.io","root":"/"},"pages":[{"title":"","date":"2023-05-16T10:17:09.803Z","updated":"2023-05-16T10:17:09.803Z","comments":true,"path":"custom.css","permalink":"http://lesliechan66.github.io/custom.css","excerpt":"","text":":root { --gutter: 25px; --radius: 13px; --color-primary: #ff4e6a; --color2: #ff761e; --color3: #ffb900; --color4: #33d57a; --color5: #00dbff; --color6: #1a98ff; --color7: #9090ff; --color-primary-bg: rgba(255,78,106,0.15); --color2-bg: rgba(255,118,30,0.15); --color3-bg: rgba(255,185,0,0.15); --color4-bg: rgba(51,213,122,0.15); --color5-bg: rgba(0,219,255,0.15); --color6-bg: rgba(26,152,255,0.15); --color7-bg: rgba(144,144,255,0.15); --color-shadow: rgba(161, 177, 204, 0.4); }"}],"posts":[{"title":"kodi+alist打造家庭级影院","slug":"kodi","date":"2023-05-16T14:58:33.000Z","updated":"2023-05-16T17:02:34.048Z","comments":true,"path":"kodi.html","link":"","permalink":"http://lesliechan66.github.io/kodi.html","excerpt":"","text":"Kodi 是一款功能强大的多媒体影音播放器 以更优雅的方式来管理你的影音资源 解码能力强 丰富强大的插件支持 炫酷的皮肤主题可以打造属于你自己家庭影院体验 多平台运行支持 本文主要介绍kodi使用，Alist配置请参考使用AList+rclone将你的阿里云盘挂载到本地中Alist部分 kodi安装 kodi官网 👉 点击下载 选择对应的平台下载安装即可 配置安装成功后，打开kodi，界面应该如下图所示，需进行一系列的配置以方便我们操作 皮肤设置打开Settings-&gt;Interface-&gt;Skin选择skin，然后选择GET MORE，下载你喜欢的皮肤，我使用的皮肤是**Embuary (Matrix) ** Tips: 每次切换皮肤时，需先将语言设置为英文，否则会出现乱码 语言设置打开Settings-&gt;Interface-&gt;Skin将fonts设置为Arial based，然后进入Settings-&gt;Interface-&gt;Regional将language设置为Chinese Simpled 添加alist源在添加源时选择浏览 然后添加网络位置，协议选择WebDAV(http)，服务器地址你本机的ip地址，远程路径填&#x2F;dav，然后输入alist的管理员账号及密码 然后将你存放电视剧和电影的文件分别添加到源。添加后系统会让你设置内容，暂时先不管。 刮削添加源后我们需要刮削影片和剧集的信息才能展示好看的海报墙。 因为众所周知的原因导致kodi官方提供的刮削器插件在国内并不能使用。我们可以使用第三方库的刮削器来解决该问题，点此下载第三方库，下载完成后，进入插件，选择从zip文件安装，选择刚刚下载的第三方库。然后我们再选择从库安装 选择timefly库，进入信息提供者分别下载剧集信息和电影信息的刮削器，推荐下载The Movie Database(免hosts)。 然后选择刚刚添加的源，长按或右键呼出菜单，选择设置内容，将信息提供者设置为刚才安装的刮削器插件。 Tips: 电影和剧集需按照一定规则的命名才能保证刮削的信息正确，具体命名规范可自行搜索 这里推荐一个阿里云盘批量改名的油猴插件阿里云盘-批量修改文件名-剧集刮削","categories":[{"name":"others","slug":"others","permalink":"http://lesliechan66.github.io/categories/others/"}],"tags":[{"name":"kodi","slug":"kodi","permalink":"http://lesliechan66.github.io/tags/kodi/"}]},{"title":"使用AList+rclone将你的阿里云盘挂载到本地","slug":"alist","date":"2023-05-16T07:53:18.000Z","updated":"2023-05-16T14:53:15.881Z","comments":true,"path":"alist.html","link":"","permalink":"http://lesliechan66.github.io/alist.html","excerpt":"","text":"使用AList+rclone将你的阿里云盘挂载到本地 本地环境： MacOS (Apple Chip M1) Docker 安装AList使用docker（推荐）输入下面的命令来运行alist 1docker run -d --restart=always -v /etc/alist:/opt/alist/data -p 5244:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=&quot;alist&quot; xhofe/alist:latest 成功跑起来之后可以访问 http://127.0.0.1:5244进入到登陆界面，用户名和密码查看日志也可以输入以下命令来查看 1docker exec -it alist ./alist admin 登陆成功后在管理界面添加存储，驱动选择阿里云盘open。具体配置请参考阿里云盘open rclone安装打开终端输入如下命令安装 1sudo -v ; curl https://rclone.org/install.sh | sudo bash 具体可参阅rclone官网 配置在终端输入rclone config按回车，进入配置流程，具体流程如下： 选择配置项，新建远程对应的是n，输入n按回车即可 设置远程名称，挂载后该名称将作为磁盘名称 选择存储类型，webdav对应的序号为46 设置远程地址，输入Alist的webdav地址即可，alist的webdav地址为ip+port+&#x2F;dav，例如http://127.0.0.1:5244/dav 选择webdav服务商，这里我们选其他，输入5即可 设置webdav用户名，即Alist的管理员账号 设置webdav密码，即Alist管理员密码 后面一路按回车即可 macfuse安装1brew install --cask macfuse 安装后需进入系统设置-&gt;隐私与安全性关闭系统安全机制，才加载挂载所需的内核插件，关闭这个需要进入恢复模式设置，具体可参考更改启动磁盘上所使用的安全性级别 挂载以上步骤都完成后，就可以开始挂载了，新建一个文件夹，例如alist，然后输入如下命令进行挂载 1nohup rclone mount [remote]:/ [local] --cache-dir /tmp --allow-other --vfs-cache-mode writes --header &quot;Referer:https://www.aliyundrive.com/drive&quot; &amp; 将remote替换为你rclone配置的远程名称，local替换为本地挂载的路径 挂载成功后我们可以打开finder然后看到对应的文件夹变成fuse的图标就大功告成了🎉","categories":[{"name":"others","slug":"others","permalink":"http://lesliechan66.github.io/categories/others/"}],"tags":[{"name":"alist","slug":"alist","permalink":"http://lesliechan66.github.io/tags/alist/"}]}],"categories":[{"name":"others","slug":"others","permalink":"http://lesliechan66.github.io/categories/others/"}],"tags":[{"name":"kodi","slug":"kodi","permalink":"http://lesliechan66.github.io/tags/kodi/"},{"name":"alist","slug":"alist","permalink":"http://lesliechan66.github.io/tags/alist/"}]}